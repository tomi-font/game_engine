- implement a more elegant way to create entities with all their components
- populate the world in a more sexy manner than dumbly creating all components by hand
- Fool-proof the collisions when the move is bigger than the object.

- Archetype storing/referencing
	- Move away from the rigidity of raw pointer referencing (invalidation issue).
	  Reference them using UIDs, being able to ask for them?
	  Not binding systems so badly to the world/entities, rather at update time?

- Debug logging with various verbosity levels/topics.
- Replace manual bitfields with std::bitset.
